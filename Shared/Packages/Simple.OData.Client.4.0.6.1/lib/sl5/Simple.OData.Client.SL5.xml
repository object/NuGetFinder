<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Simple.OData.Client.SL5</name>
    </assembly>
    <members>
        <member name="M:Simple.OData.Client.Extensions.HomogenizeEx.Homogenize(System.String)">
            <summary>
            Downshift a string and remove all non-alphanumeric characters.
            </summary>
            <param name="source">The original string.</param>
            <returns>The modified string.</returns>
        </member>
        <member name="M:Simple.OData.Client.Extensions.HomogenizeEx.SetRegularExpression(System.Text.RegularExpressions.Regex)">
            <summary>
            Sets the regular expression to be used for homogenizing object names.
            </summary>
            <param name="regex">A regular expression matching all non-comparing characters. The default is &quot;[^a-z0-9]&quot;.</param>
            <remarks>Homogenized strings are always forced to lower-case.</remarks>
        </member>
        <member name="M:Simple.OData.Client.Extensions.XAttributeExtensions.ValueOrDefault(System.Xml.Linq.XAttribute)">
            <summary>
            Returns the string value of the Attribute or <c>null</c> if the attribute is null.
            Null-safe, eliminates need for null-checking.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns></returns>
        </member>
        <member name="T:Simple.OData.Client.Extensions.XElementExtensions">
            <summary>
            Extension methods for <see cref="T:System.Xml.Linq.XElement"/>.
            </summary>
        </member>
        <member name="T:Simple.OData.Client.FluentClient`1">
            <summary>
            Provides access to OData operations in a fluent style.
            </summary>
            <typeparam name="T">The entry type.</typeparam>
        </member>
        <member name="T:Simple.OData.Client.IFluentClient`1">
            <summary>
            Provides access to OData operations in a fluent style.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindEntriesAsync">
            <summary>
            Retrieves entries by executing OData GET request.
            </summary>
            <returns>Request execution results.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindEntriesAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves entries by executing OData GET request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Entries found.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindEntriesAsync(System.Boolean)">
            <summary>
            Retrieves entries by executing OData GET request.
            </summary>
            <param name="scalarResult">if set to <c>true</c> the result is expected to be of a scalar type.</param>
            <returns>Entries found.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindEntriesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieves entries by executing OData GET request.
            </summary>
            <param name="scalarResult">if set to <c>true</c> the result is expected to be of a scalar type.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Entries found.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindEntriesWithCountAsync">
            <summary>
            Retrieves entries with result count by executing OData GET request.
            </summary>
            <returns>Entries found with entry count.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindEntriesWithCountAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves entries with result count by executing OData GET request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Entries found with entry count.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindEntriesWithCountAsync(System.Boolean)">
            <summary>
            Retrieves entries with result count by executing OData GET request.
            </summary>
            <param name="scalarResult">if set to <c>true</c> the result is expected to be of a scalar type.</param>
            <returns>Entries found with entry count.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindEntriesWithCountAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieves entries with result count by executing OData GET request.
            </summary>
            <param name="scalarResult">if set to <c>true</c> the result is expected to be of a scalar type.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Entries found with entry count.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindEntryAsync">
            <summary>
            Retrieves an entry by executing OData GET request.
            </summary>
            <returns>The first of the entries found.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindEntryAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves an entry by executing OData GET request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The first of the entries found.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindScalarAsync">
            <summary>
            Retrieves an entry as a scalar type by executing OData GET request.
            </summary>
            <returns>The result as a scalar type.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.FindScalarAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves an entry as a scalar type by executing OData GET request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The result as a scalar type.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.InsertEntryAsync">
            <summary>
            Insert a new entry by executing OData POST request.
            </summary>
            <returns>The newly inserted entry</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.InsertEntryAsync(System.Threading.CancellationToken)">
            <summary>
            Insert a new entry by executing OData POST request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The newly inserted entry</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.InsertEntryAsync(System.Boolean)">
            <summary>
            Insert a new entry by executing OData POST request.
            </summary>
            <param name="resultRequired">if set to <c>true</c> returns the new entry data, otherwise returns <c>null</c>.</param>
            <returns>The newly inserted entry</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.InsertEntryAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Insert a new entry by executing OData POST request.
            </summary>
            <param name="resultRequired">if set to <c>true</c> returns the new entry data, otherwise returns <c>null</c>.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The newly inserted entry</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UpdateEntryAsync">
            <summary>
            Updates the existing entry by executing OData PUT or PATCH request.
            </summary>
            <returns>The updated entry data</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UpdateEntryAsync(System.Threading.CancellationToken)">
            <summary>
            Updates the existing entry by executing OData PUT or PATCH request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The updated entry data</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UpdateEntryAsync(System.Boolean)">
            <summary>
            Updates the existing entry by executing OData PUT or PATCH request.
            </summary>
            <param name="resultRequired">if set to <c>true</c> returns the updated entry data, otherwise returns <c>null</c>.</param>
            <returns>The updated entry data</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UpdateEntryAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Updates the existing entry by executing OData PUT or PATCH request.
            </summary>
            <param name="resultRequired">if set to <c>true</c> returns the updated entry data, otherwise returns <c>null</c>.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The updated entry data</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UpdateEntriesAsync">
            <summary>
            Updates entries by executing multiple OData PUT or PATCH requests.
            </summary>
            <returns>The updated entries data</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UpdateEntriesAsync(System.Threading.CancellationToken)">
            <summary>
            Updates entries by executing multiple OData PUT or PATCH requests.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The updated entries data</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UpdateEntriesAsync(System.Boolean)">
            <summary>
            Updates entries by executing multiple OData PUT or PATCH requests.
            </summary>
            <param name="resultRequired">if set to <c>true</c> returns the updated entry data, otherwise returns <c>null</c>.</param>
            <returns>The updated entries data</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UpdateEntriesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Updates entries by executing multiple OData PUT or PATCH requests.
            </summary>
            <param name="resultRequired">if set to <c>true</c> returns the updated entry data, otherwise returns <c>null</c>.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The updated entries data</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.DeleteEntryAsync">
            <summary>
            Deletes the existing entry by executing OData DELETE request.
            </summary>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.DeleteEntryAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes the existing entry by executing OData DELETE request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.DeleteEntriesAsync">
            <summary>
            Deletes entries by executing multiple OData DELETE requests.
            </summary>
            <returns>The number of deleted entries.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.DeleteEntriesAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes entries by executing multiple OData DELETE requests.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of deleted entries.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.LinkEntryAsync``1(``0)">
            <summary>
            Creates a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <param name="linkedEntryKey">The linked entry key.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.LinkEntryAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Creates a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <param name="linkedEntryKey">The linked entry key.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.LinkEntryAsync``1(``0,System.String)">
            <summary>
            Creates a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <param name="linkedEntryKey">The linked entry key.</param>
            <param name="linkName">Name of the link.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.LinkEntryAsync``1(``0,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <param name="linkedEntryKey">The linked entry key.</param>
            <param name="linkName">Name of the link.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.LinkEntryAsync``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <param name="expression">The link expression.</param>
            <param name="linkedEntryKey">The linked entry key.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.LinkEntryAsync``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Threading.CancellationToken)">
            <summary>
            Creates a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <param name="expression">The link expression.</param>
            <param name="linkedEntryKey">The linked entry key.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.LinkEntryAsync(Simple.OData.Client.ODataExpression,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a link between entries.
            </summary>
            <param name="expression">The link expression.</param>
            <param name="linkedEntryKey">The linked entry key.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.LinkEntryAsync(Simple.OData.Client.ODataExpression,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Creates a link between entries.
            </summary>
            <param name="expression">The link expression.</param>
            <param name="linkedEntryKey">The linked entry key.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.LinkEntryAsync(Simple.OData.Client.ODataExpression,Simple.OData.Client.ODataEntry)">
            <summary>
            Creates a link between entries.
            </summary>
            <param name="expression">The link expression.</param>
            <param name="linkedEntryKey">The linked entry key.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.LinkEntryAsync(Simple.OData.Client.ODataExpression,Simple.OData.Client.ODataEntry,System.Threading.CancellationToken)">
            <summary>
            Creates a link between entries.
            </summary>
            <param name="expression">The link expression.</param>
            <param name="linkedEntryKey">The linked entry key.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UnlinkEntryAsync``1">
            <summary>
            Deletes a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UnlinkEntryAsync``1(System.Threading.CancellationToken)">
            <summary>
            Deletes a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UnlinkEntryAsync``1(System.String)">
            <summary>
            Deletes a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <param name="linkName">Name of the link.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UnlinkEntryAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <param name="linkName">Name of the link.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UnlinkEntryAsync``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Deletes a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <param name="expression">The link expression.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UnlinkEntryAsync``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.CancellationToken)">
            <summary>
            Deletes a link between entries.
            </summary>
            <typeparam name="U">The linked entry type.</typeparam>
            <param name="expression">The link expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UnlinkEntryAsync(Simple.OData.Client.ODataExpression)">
            <summary>
            Deletes a link between entries.
            </summary>
            <param name="expression">The link expression.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.UnlinkEntryAsync(Simple.OData.Client.ODataExpression,System.Threading.CancellationToken)">
            <summary>
            Deletes a link between entries.
            </summary>
            <param name="expression">The link expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.ExecuteFunctionAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes the OData function.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The function parameters.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.ExecuteFunctionAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Executes the OData function.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.ExecuteFunctionAsScalarAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes the OData function and returns scalar result.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The function parameters.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.ExecuteFunctionAsScalarAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Executes the OData function and returns scalar result.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.ExecuteFunctionAsArrayAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes the OData function and returns an array.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The function parameters.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.ExecuteFunctionAsArrayAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Executes the OData function and returns an array.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.GetCommandTextAsync">
            <summary>
            Gets the OData command text.
            </summary>
            <returns>The command text.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.GetCommandTextAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the OData command text.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The command text.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.As(System.String)">
            <summary>
            Casts the collection of base entities as the collection of derived ones.
            </summary>
            <param name="derivedCollectionName">Name of the derived collection.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.As``1(System.String)">
            <summary>
            Casts the collection of base entities as the collection of derived ones.
            </summary>
            <param name="derivedCollectionName">Name of the derived collection.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.As(Simple.OData.Client.ODataExpression)">
            <summary>
            Casts the collection of base entities as the collection of derived ones.
            </summary>
            <param name="expression">The expression for the derived collection.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Key(System.Object[])">
            <summary>
            Sets the specified entry key.
            </summary>
            <param name="entryKey">The entry key.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Key(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Sets the specified entry key.
            </summary>
            <param name="entryKey">The entry key.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Key(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the specified entry key.
            </summary>
            <param name="entryKey">The entry key.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Key(`0)">
            <summary>
            Sets the specified entry key.
            </summary>
            <param name="entryKey">The entry key.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Filter(System.String)">
            <summary>
            Sets the specified OData filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Filter(Simple.OData.Client.ODataExpression)">
            <summary>
            Sets the specified OData filter.
            </summary>
            <param name="expression">The filter expression.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Filter(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Sets the specified OData filter.
            </summary>
            <param name="expression">The filter expression.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Skip(System.Int32)">
            <summary>
            Skips the specified number of entries from the result.
            </summary>
            <param name="count">The count.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Top(System.Int32)">
            <summary>
            Limits the number of results with the specified value.
            </summary>
            <param name="count">The count.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Expand(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Expands the specified associations.
            </summary>
            <param name="associations">The associations to expand.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Expand(System.String[])">
            <summary>
            Expands the specified associations.
            </summary>
            <param name="associations">The associations to expand.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Expand(Simple.OData.Client.ODataExpression[])">
            <summary>
            Expands the specified associations.
            </summary>
            <param name="associations">The associations to expand.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Expand(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Expands the specified expression.
            </summary>
            <param name="expression">The expression for associations to expand.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Select(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Selects the specified result columns.
            </summary>
            <param name="columns">The selected columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Select(System.String[])">
            <summary>
            Selects the specified result columns.
            </summary>
            <param name="columns">The selected columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Select(Simple.OData.Client.ODataExpression[])">
            <summary>
            Selects the specified result columns.
            </summary>
            <param name="columns">The selected columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Selects the specified result columns.
            </summary>
            <param name="expression">The expression for the selected columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.OrderBy(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Boolean}})">
            <summary>
            Sorts the result by the specified columns in the specified order.
            </summary>
            <param name="columns">The sort columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.OrderBy(System.String[])">
            <summary>
            Sorts the result by the specified columns in ascending order.
            </summary>
            <param name="columns">The sort columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.OrderBy(Simple.OData.Client.ODataExpression[])">
            <summary>
            Sorts the result by the specified columns in ascending order.
            </summary>
            <param name="columns">The sort columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Sorts the result by the specified columns in ascending order.
            </summary>
            <param name="expression">The expression for the sort columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.ThenBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Sorts the result by the specified columns in ascending order.
            </summary>
            <param name="expression">The expression for the sort columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.OrderByDescending(System.String[])">
            <summary>
            Sorts the result by the specified columns in descending order.
            </summary>
            <param name="columns">The sort columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.OrderByDescending(Simple.OData.Client.ODataExpression[])">
            <summary>
            Sorts the result by the specified columns in descending order.
            </summary>
            <param name="columns">The sort columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Sorts the result by the specified columns in descending order.
            </summary>
            <param name="expression">The expression for the sort columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.ThenByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Sorts the result by the specified columns in descending order.
            </summary>
            <param name="expression">The expression for the sort columns.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Count">
            <summary>
            Requests the number of results.
            </summary>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.NavigateTo``1(System.String)">
            <summary>
            Navigates to the linked entity.
            </summary>
            <typeparam name="U">The type of the linked entity.</typeparam>
            <param name="linkName">Name of the link.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.NavigateTo``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Navigates to the linked entity.
            </summary>
            <typeparam name="U">The type of the linked entity.</typeparam>
            <param name="expression">The expression for the link.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.NavigateTo``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Navigates to the linked entity.
            </summary>
            <typeparam name="U">The type of the linked entity.</typeparam>
            <param name="expression">The expression for the link.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.NavigateTo``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}})">
            <summary>
            Navigates to the linked entity.
            </summary>
            <typeparam name="U">The type of the linked entity.</typeparam>
            <param name="expression">The expression for the link.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.NavigateTo``1(System.Linq.Expressions.Expression{System.Func{`0,``0[]}})">
            <summary>
            Navigates to the linked entity.
            </summary>
            <typeparam name="U">The type of the linked entity.</typeparam>
            <param name="expression">The expression for the link.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.NavigateTo(System.String)">
            <summary>
            Navigates to the linked entity.
            </summary>
            <param name="linkName">Name of the link.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.NavigateTo(Simple.OData.Client.ODataExpression)">
            <summary>
            Navigates to the linked entity.
            </summary>
            <param name="expression">The expression for the link.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Set(System.Object)">
            <summary>
            Sets the specified entry value for update.
            </summary>
            <param name="value">The value to update the entry with.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Set(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the specified entry value for update.
            </summary>
            <param name="value">The value to update the entry with.</param>
            <returns></returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Set(`0)">
            <summary>
            Sets the specified entry value for update.
            </summary>
            <param name="entry">The entry with the updated value.</param>
            <returns></returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Set(Simple.OData.Client.ODataExpression[])">
            <summary>
            Sets the specified entry value for update.
            </summary>
            <param name="value">The value to update the entry with.</param>
            <returns></returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Function(System.String)">
            <summary>
            Sets the OData function name.
            </summary>
            <param name="functionName">Name of the function.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:Simple.OData.Client.IFluentClient`1.Parameters(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Assigns parameters to the OData function.
            </summary>
            <param name="parameters">The function parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Simple.OData.Client.IFluentClient`1.FilterIsKey">
            <summary>
            Gets a value indicating whether the OData command filter represent the entry key.
            </summary>
            <value>
              <c>true</c> if the filter is an entry key; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Simple.OData.Client.IFluentClient`1.FilterAsKey">
            <summary>
            Converts the current command filter value to the entry key if they are equivalent; otherwise returns <s>null</s>.
            </summary>
            <value>
            The filter as entry key.
            </value>
        </member>
        <member name="T:Simple.OData.Client.WebRequestException">
            <summary>
            The exception that is thrown when the service failed to process the Web request
            </summary>
        </member>
        <member name="M:Simple.OData.Client.WebRequestException.CreateFromWebException(System.Net.WebException)">
            <summary>
            Creates from the instance of WebException.
            </summary>
            <param name="ex">The instance of <see cref="T:System.Net.WebException"/>.</param>
            <returns>The instance of <see cref="T:Simple.OData.Client.WebRequestException"/>.</returns>
        </member>
        <member name="M:Simple.OData.Client.WebRequestException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.WebRequestException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Simple.OData.Client.WebRequestException.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.WebRequestException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="code">The <see cref="T:System.Net.HttpStatusCode"/>.</param>
        </member>
        <member name="M:Simple.OData.Client.WebRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.WebRequestException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Simple.OData.Client.WebRequestException.#ctor(System.String,System.Net.HttpWebResponse,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.WebRequestException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="response">The <see cref="T:System.Net.HttpWebResponse"/>.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Simple.OData.Client.WebRequestException.#ctor(System.String,System.Net.HttpStatusCode,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.WebRequestException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="code">The <see cref="T:System.Net.HttpStatusCode"/>.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Simple.OData.Client.WebRequestException.#ctor(System.Net.WebException)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.WebRequestException"/> class.
            </summary>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="P:Simple.OData.Client.WebRequestException.Code">
            <summary>
            Gets the <see cref="T:System.Net.HttpStatusCode"/>.
            </summary>
            <value>
            The <see cref="T:System.Net.HttpStatusCode"/>.
            </value>
        </member>
        <member name="P:Simple.OData.Client.WebRequestException.Response">
            <summary>
            Gets the HTTP response text.
            </summary>
            <value>
            The response text.
            </value>
        </member>
        <member name="T:Simple.OData.Client.IODataClient">
            <summary>
            Provides access to OData operations.
            </summary>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.For(System.String)">
            <summary>
            Returns an instance of a fluent OData client for the specified collection.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <returns>The fluent OData client instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.For(Simple.OData.Client.ODataExpression)">
            <summary>
            Returns an instance of a fluent OData client for the specified collection.
            </summary>
            <param name="expression">Collection expression.</param>
            <returns>The fluent OData client instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.For``1(System.String)">
            <summary>
            Returns an instance of a fluent OData client for the specified collection.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <returns>The fluent OData client instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetSchemaAsync">
            <summary>
            Gets the OData service metadata.
            </summary>
            <returns>The service metadata.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetSchemaAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the OData service metadata.
            </summary>
            <returns>The service metadata.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetSchemaAsStringAsync">
            <summary>
            Gets the OData service metadata as string.
            </summary>
            <returns>The service metadata string.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetSchemaAsStringAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the OData service metadata as string.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The service metadata string.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetCommandTextAsync(System.String,Simple.OData.Client.ODataExpression)">
            <summary>
            Gets the OData command text.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="expression">The command expression.</param>
            <returns>The command text.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetCommandTextAsync(System.String,Simple.OData.Client.ODataExpression,System.Threading.CancellationToken)">
            <summary>
            Gets the OData command text.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="expression">The command expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The command text.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetCommandTextAsync``1(System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Gets the OData command text.
            </summary>
            <typeparam name="T">The collection type.</typeparam>
            <param name="collection">The name of the collection.</param>
            <param name="expression">The command expression.</param>
            <returns>The command text.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetCommandTextAsync``1(System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Gets the OData command text.
            </summary>
            <typeparam name="T">The collection type.</typeparam>
            <param name="collection">The name of the collection.</param>
            <param name="expression">The command expression.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The command text.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindEntriesAsync(System.String)">
            <summary>
            Retrieves entries by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <returns>Entries found.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindEntriesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves entries by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Entries found.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindEntriesAsync(System.String,System.Boolean)">
            <summary>
            Retrieves entries by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <param name="scalarResult">if set to <c>true</c> the result is expected to be of a scalar type.</param>
            <returns>Entries found.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindEntriesAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieves entries by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <param name="scalarResult">if set to <c>true</c> the result is expected to be of a scalar type.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Entries found.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindEntriesWithCountAsync(System.String)">
            <summary>
            Retrieves entries with result count by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <returns>Entries found with entry count.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindEntriesWithCountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves entries with result count by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Entries found with entry count.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindEntriesWithCountAsync(System.String,System.Boolean)">
            <summary>
            Retrieves entries with result count by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <param name="scalarResult">if set to <c>true</c> the result is expected to be of a scalar type.</param>
            <returns>Entries found with entry count.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindEntriesWithCountAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieves entries with result count by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <param name="scalarResult">if set to <c>true</c> the result is expected to be of a scalar type.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Entries found with entry count.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindEntryAsync(System.String)">
            <summary>
            Retrieves an entry by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <returns>The first of the entries found.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindEntryAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an entry by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The first of the entries found.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindScalarAsync(System.String)">
            <summary>
            Retrieves an entry as a scalar type by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <returns>The result as a scalar type.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.FindScalarAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an entry as a scalar type by executing OData GET request.
            </summary>
            <param name="commandText">The OData command text.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The result as a scalar type.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetEntryAsync(System.String,System.Object[])">
            <summary>
            Looks up an entry by executing OData GET request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <returns>The entry with the specified key</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetEntryAsync(System.String,System.Threading.CancellationToken,System.Object[])">
            <summary>
            Looks up an entry by executing OData GET request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="entryKey">The entry key.</param>
            <returns>The entry with the specified key</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Looks up an entry by executing OData GET request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <returns>The entry with the specified key</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.GetEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Looks up an entry by executing OData GET request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The entry with the specified key</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.InsertEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Insert a new entry by executing OData POST request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryData">The entry data.</param>
            <returns>The newly inserted entry</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.InsertEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Insert a new entry by executing OData POST request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryData">The entry data.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The newly inserted entry</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.InsertEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Insert a new entry by executing OData POST request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryData">The entry data.</param>
            <param name="resultRequired">if set to <c>true</c> returns the new entry data, otherwise returns <c>null</c>.</param>
            <returns>The newly inserted entry</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.InsertEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Insert a new entry by executing OData POST request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryData">The entry data.</param>
            <param name="resultRequired">if set to <c>true</c> returns the new entry data, otherwise returns <c>null</c>.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The newly inserted entry</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.UpdateEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Updates the existing entry by executing OData PUT or PATCH request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <param name="entryData">The entry data.</param>
            <returns>The updated entry data</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.UpdateEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Updates the existing entry by executing OData PUT or PATCH request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <param name="entryData">The entry data.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The updated entry data</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.UpdateEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Updates the existing entry by executing OData PUT or PATCH request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <param name="entryData">The entry data.</param>
            <param name="resultRequired">if set to <c>true</c> returns the updated entry data, otherwise returns <c>null</c>.</param>
            <returns>The updated entry data</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.UpdateEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Updates the existing entry by executing OData PUT or PATCH request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <param name="entryData">The entry data.</param>
            <param name="resultRequired">if set to <c>true</c> returns the updated entry data, otherwise returns <c>null</c>.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The updated entry data</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.UpdateEntriesAsync(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Updates entries by executing multiple OData PUT or PATCH requests.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="commandText">The command text.</param>
            <param name="entryData">The entry data.</param>
            <returns>The updated entries data</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.UpdateEntriesAsync(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Updates entries by executing multiple OData PUT or PATCH requests.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="commandText">The command text.</param>
            <param name="entryData">The entry data.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The updated entries data</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.UpdateEntriesAsync(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Updates entries by executing multiple OData PUT or PATCH requests.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="commandText">The command text.</param>
            <param name="entryData">The entry data.</param>
            <param name="resultRequired">if set to <c>true</c> returns the updated entry data, otherwise returns <c>null</c>.</param>
            <returns>The updated entries data</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.UpdateEntriesAsync(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Updates entries by executing multiple OData PUT or PATCH requests.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="commandText">The command text.</param>
            <param name="entryData">The entry data.</param>
            <param name="resultRequired">if set to <c>true</c> returns the updated entry data, otherwise returns <c>null</c>.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The updated entries data</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.DeleteEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Deletes the existing entry by executing OData DELETE request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.DeleteEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Deletes the existing entry by executing OData DELETE request.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.DeleteEntriesAsync(System.String,System.String)">
            <summary>
            Deletes entries by executing multiple OData DELETE requests.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="commandText">The command text.</param>
            <returns>The number of deleted entries.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.DeleteEntriesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes entries by executing multiple OData DELETE requests.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="commandText">The command text.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The number of deleted entries.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.LinkEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a link between entries.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <param name="linkName">Name of the link.</param>
            <param name="linkedEntryKey">The linked entry key.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.LinkEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Creates a link between entries.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <param name="linkName">Name of the link.</param>
            <param name="linkedEntryKey">The linked entry key.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.UnlinkEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Deletes a link between entries.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <param name="linkName">Name of the link to be deleted.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.UnlinkEntryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a link between entries.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="entryKey">The entry key.</param>
            <param name="linkName">Name of the link to be deleted.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task instance.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.ExecuteFunctionAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes the OData function.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The function parameters.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.ExecuteFunctionAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Executes the OData function.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.ExecuteFunctionAsScalarAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes the OData function and returns scalar result.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The parameters.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.ExecuteFunctionAsScalarAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Executes the OData function and returns scalar result.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.ExecuteFunctionAsArrayAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes the OData function and returns an array.
            </summary>
            <typeparam name="T">The array element type.</typeparam>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The function parameters.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="M:Simple.OData.Client.IODataClient.ExecuteFunctionAsArrayAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Executes the OData function and returns an array.
            </summary>
            <typeparam name="T">The array element type.</typeparam>
            <param name="functionName">Name of the function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Function execution result.</returns>
        </member>
        <member name="T:Simple.OData.Client.IPluralizer">
            <summary>
            Provides pluralization and singularization of words when resolving names of resources and properties
            </summary>
        </member>
        <member name="M:Simple.OData.Client.IPluralizer.Pluralize(System.String)">
            <summary>
            Pluralizes the specified word.
            </summary>
            <param name="word">The word to pluralize.</param>
            <returns></returns>
        </member>
        <member name="M:Simple.OData.Client.IPluralizer.Singularize(System.String)">
            <summary>
            Singularizes the specified word.
            </summary>
            <param name="word">The word to singularize.</param>
            <returns></returns>
        </member>
        <member name="T:Simple.OData.Client.ODataBatch">
            <summary>
            Performs batch processing of OData requests by grouping multiple operations in a single HTTP POST request in accordance with OData protocol
            </summary>
        </member>
        <member name="M:Simple.OData.Client.ODataBatch.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.ODataBatch"/> class.
            </summary>
            <param name="urlBase">The URL base.</param>
        </member>
        <member name="M:Simple.OData.Client.ODataBatch.#ctor(Simple.OData.Client.ODataClientSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.ODataBatch"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Simple.OData.Client.ODataBatch.Dispose">
            <summary>
            Cancels pending OData batch and releases all resources used by <see cref="T:Simple.OData.Client.ODataBatch"/>.
            </summary>
        </member>
        <member name="M:Simple.OData.Client.ODataBatch.CompleteAsync">
            <summary>
            Completes the OData batch by submitting pending requests to the OData service.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Simple.OData.Client.ODataBatch.CompleteAsync(System.Threading.CancellationToken)">
            <summary>
            Completes the OData batch by submitting pending requests to the OData service.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:Simple.OData.Client.ODataBatch.Cancel">
            <summary>
            Cancels the pending OData batch.
            </summary>
        </member>
        <member name="T:Simple.OData.Client.ODataClient">
            <summary>
            Provides access to OData operations.
            </summary>
            <summary>
            Provides access to OData operations.
            </summary>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.GetSchemaAsync(System.String)">
            <summary>
            Retrieves the OData service schema.
            </summary>
            <param name="urlBase">The URL base of the OData service.</param>
            <returns>The schema.</returns>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.GetSchemaAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the OData service schema.
            </summary>
            <param name="urlBase">The URL base of the OData service.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The schema.</returns>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.GetSchemaAsync(System.String,System.Net.ICredentials)">
            <summary>
            Retrieves the OData service schema.
            </summary>
            <param name="urlBase">The URL base of the OData service.</param>
            <param name="credentials">The OData service access credentials.</param>
            <returns>The schema.</returns>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.GetSchemaAsync(System.String,System.Net.ICredentials,System.Threading.CancellationToken)">
            <summary>
            Retrieves the OData service schema.
            </summary>
            <param name="urlBase">The URL base of the OData service.</param>
            <param name="credentials">The OData service access credentials.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The schema.</returns>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.GetSchemaAsStringAsync(System.String)">
            <summary>
            Retrieves the OData service schema as string.
            </summary>
            <param name="urlBase">The URL base of the OData service.</param>
            <returns>The schema.</returns>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.GetSchemaAsStringAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the schema as string asynchronous.
            </summary>
            <param name="urlBase">The URL base of the OData service.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The schema.</returns>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.GetSchemaAsStringAsync(System.String,System.Net.ICredentials)">
            <summary>
            Gets the schema as string asynchronous.
            </summary>
            <param name="urlBase">The URL base of the OData service.</param>
            <param name="credentials">The OData service access credentials.</param>
            <returns>The schema.</returns>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.GetSchemaAsStringAsync(System.String,System.Net.ICredentials,System.Threading.CancellationToken)">
            <summary>
            Gets the schema as string asynchronous.
            </summary>
            <param name="urlBase">The URL base.</param>
            <param name="credentials">The OData service access credentials.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The schema.</returns>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.ODataClient"/> class.
            </summary>
            <param name="urlBase">The OData service URL.</param>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.#ctor(Simple.OData.Client.ODataClientSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.ODataClient"/> class.
            </summary>
            <param name="settings">The OData client settings.</param>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.#ctor(Simple.OData.Client.ODataBatch)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.ODataClient"/> class.
            </summary>
            <param name="batch">The OData batch instance.</param>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.ParseSchemaString(System.String)">
            <summary>
            Parses the OData service metadata schema string.
            </summary>
            <param name="schemaString">The schema string.</param>
            <returns>The schema.</returns>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.SetPluralizer(Simple.OData.Client.IPluralizer)">
            <summary>
            Sets the word pluralizer used when resolving metadata objects.
            </summary>
            <param name="pluralizer">The pluralizer.</param>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.For(System.String)">
            <summary>
            Returns an instance of a fluent OData client for the specified collection.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <returns>
            The fluent OData client instance.
            </returns>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.For(Simple.OData.Client.ODataExpression)">
            <summary>
            Returns an instance of a fluent OData client for the specified collection.
            </summary>
            <param name="expression">Collection expression.</param>
            <returns>
            The fluent OData client instance.
            </returns>
        </member>
        <member name="M:Simple.OData.Client.ODataClient.For``1(System.String)">
            <summary>
            Returns an instance of a fluent OData client for the specified collection.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <param name="collectionName">Name of the collection.</param>
            <returns>
            The fluent OData client instance.
            </returns>
        </member>
        <member name="T:Simple.OData.Client.ODataClientSettings">
            <summary>
            OData client configuration settings
            </summary>
        </member>
        <member name="M:Simple.OData.Client.ODataClientSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.ODataClientSettings"/> class.
            </summary>
        </member>
        <member name="M:Simple.OData.Client.ODataClientSettings.#ctor(System.String,System.Net.ICredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.ODataClientSettings"/> class.
            </summary>
            <param name="urlBase">The URL address.</param>
            <param name="credentials">The client credentials.</param>
        </member>
        <member name="P:Simple.OData.Client.ODataClientSettings.UrlBase">
            <summary>
            Gets or sets the OData service URL.
            </summary>
            <value>
            The URL address.
            </value>
        </member>
        <member name="P:Simple.OData.Client.ODataClientSettings.Credentials">
            <summary>
            Gets or sets the OData client credentials.
            </summary>
            <value>
            The client credentials.
            </value>
        </member>
        <member name="P:Simple.OData.Client.ODataClientSettings.IncludeResourceTypeInEntryProperties">
            <summary>
            Gets or sets a value indicating whether entry properties should be extended with the resource type.
            </summary>
            <value>
            <c>true</c> to include resource type in entry properties; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Simple.OData.Client.ODataClientSettings.IgnoreResourceNotFoundException">
            <summary>
            Gets or sets a value indicating whether resource not found exception (404) should be ignored.
            </summary>
            <value>
            <c>true</c> to ignore resource not found exception; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Simple.OData.Client.ODataClientSettings.BeforeRequest">
            <summary>
            Gets or sets the action executed before the OData request.
            </summary>
            <value>
            The action on <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </value>
        </member>
        <member name="P:Simple.OData.Client.ODataClientSettings.AfterResponse">
            <summary>
            Gets or sets the action executed after the OData request.
            </summary>
            <value>
            The action on <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </value>
        </member>
        <member name="T:Simple.OData.Client.ODataEntry">
            <summary>
            A container for an OData entry properties. Normally not used directly by the client code.
            </summary>
        </member>
        <member name="F:Simple.OData.Client.ODataEntry._entry">
            <summary>
            The content of the OData entry.
            </summary>
        </member>
        <member name="M:Simple.OData.Client.ODataEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.ODataEntry"/> class.
            </summary>
        </member>
        <member name="M:Simple.OData.Client.ODataEntry.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.ODataEntry"/> class.
            </summary>
            <param name="entry">The collection of entry properties.</param>
        </member>
        <member name="M:Simple.OData.Client.ODataEntry.AsDictionary">
            <summary>
            Returns OData entry properties as dictionary.
            </summary>
            <returns>A dictionary of OData entry properties.</returns>
        </member>
        <member name="M:Simple.OData.Client.ODataEntry.op_Explicit(System.Collections.Generic.Dictionary{System.String,System.Object})~Simple.OData.Client.ODataEntry">
            <summary>
            Performs an explicit conversion from <see cref="T:System.Collections.Generic.Dictionary{System.String,System.Object}"/> to <see cref="T:Simple.OData.Client.ODataEntry"/>.
            </summary>
            <param name="entry">The property collection.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Simple.OData.Client.ODataEntry.op_Explicit(Simple.OData.Client.ODataEntry)~System.Collections.Generic.Dictionary{System.String,System.Object}">
            <summary>
            Performs an explicit conversion from <see cref="T:Simple.OData.Client.ODataEntry"/> to <see cref="T:System.Collections.Generic.Dictionary{System.String,System.Object}"/>.
            </summary>
            <param name="entry">The OData entry.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="P:Simple.OData.Client.ODataEntry.Item(System.String)">
            <summary>
            Gets or sets the value of the specified property.
            </summary>
            <value>
            The property value.
            </value>
            <param name="key">The property name.</param>
            <returns>The property value.</returns>
        </member>
        <member name="T:Simple.OData.Client.Pluralizer">
            <summary>
            Provides pluralization and singularization of words when resolving names of resources and properties
            </summary>
        </member>
        <member name="M:Simple.OData.Client.Pluralizer.#ctor(System.Func{System.String,System.String},System.Func{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.Pluralizer"/> class.
            </summary>
            <param name="pluralize">The Pluralize function delegate.</param>
            <param name="singularize">The Singularize function delegate.</param>
        </member>
        <member name="M:Simple.OData.Client.Pluralizer.Pluralize(System.String)">
            <summary>
            Pluralizes the specified word.
            </summary>
            <param name="word">The word to pluralize.</param>
            <returns></returns>
        </member>
        <member name="M:Simple.OData.Client.Pluralizer.Singularize(System.String)">
            <summary>
            Singularizes the specified word.
            </summary>
            <param name="word">The word to singularize.</param>
            <returns></returns>
        </member>
        <member name="T:Simple.OData.Client.ISchema">
            <summary>
            Access to OData service metadata
            </summary>
        </member>
        <member name="M:Simple.OData.Client.ISchema.ResolveAsync(System.Threading.CancellationToken)">
            <summary>
            Resolves the schema by requesting metada from the OData service.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The schema.</returns>
        </member>
        <member name="M:Simple.OData.Client.ISchema.HasTable(System.String)">
            <summary>
            Determines whether the schema has the specified table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns><c>true</c> if the schema contains the table; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Simple.OData.Client.ISchema.FindTable(System.String)">
            <summary>
            Finds the specified table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns>The table found.</returns>
        </member>
        <member name="M:Simple.OData.Client.ISchema.FindBaseTable(System.String)">
            <summary>
            Finds the base table.
            </summary>
            <param name="tablePath">The table path.</param>
            <returns>The table found.</returns>
        </member>
        <member name="M:Simple.OData.Client.ISchema.FindConcreteTable(System.String)">
            <summary>
            Finds the concrete table.
            </summary>
            <param name="tablePath">The table path.</param>
            <returns>The table found.</returns>
        </member>
        <member name="M:Simple.OData.Client.ISchema.FindColumn(System.String,System.String)">
            <summary>
            Finds the specified column.
            </summary>
            <param name="tablePath">The table path.</param>
            <param name="columnName">Name of the column.</param>
            <returns>The column found.</returns>
        </member>
        <member name="M:Simple.OData.Client.ISchema.FindAssociation(System.String,System.String)">
            <summary>
            Finds the specified association.
            </summary>
            <param name="tablePath">The table path.</param>
            <param name="associationName">Name of the association.</param>
            <returns>The association found.</returns>
        </member>
        <member name="M:Simple.OData.Client.ISchema.HasFunction(System.String)">
            <summary>
            Determines whether the schema has the specified function.
            </summary>
            <param name="functionName">Name of the function.</param>
            <returns><c>true</c> if the schema contains the function; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Simple.OData.Client.ISchema.FindFunction(System.String)">
            <summary>
            Finds the specified function.
            </summary>
            <param name="functionName">Name of the function.</param>
            <returns>The function found.</returns>
        </member>
        <member name="M:Simple.OData.Client.ISchema.FindEntityType(System.String)">
            <summary>
            Finds the type of the entity.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns>The entity type found.</returns>
        </member>
        <member name="M:Simple.OData.Client.ISchema.FindComplexType(System.String)">
            <summary>
            Finds the the complex type.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns>The complex type found.</returns>
        </member>
        <member name="P:Simple.OData.Client.ISchema.MetadataAsString">
            <summary>
            Gets the schema metadata as string.
            </summary>
            <value>
            The metadata as string.
            </value>
        </member>
        <member name="P:Simple.OData.Client.ISchema.TypesNamespace">
            <summary>
            Gets the schema types namespace.
            </summary>
            <value>
            The types namespace.
            </value>
        </member>
        <member name="P:Simple.OData.Client.ISchema.ContainersNamespace">
            <summary>
            Gets the schema containers namespace.
            </summary>
            <value>
            The containers namespace.
            </value>
        </member>
        <member name="P:Simple.OData.Client.ISchema.Tables">
            <summary>
            Gets the schema tables.
            </summary>
            <value>
            The tables.
            </value>
        </member>
        <member name="P:Simple.OData.Client.ISchema.Functions">
            <summary>
            Gets the schema functions.
            </summary>
            <value>
            The functions.
            </value>
        </member>
        <member name="P:Simple.OData.Client.ISchema.EntityTypes">
            <summary>
            Gets the schema entity types.
            </summary>
            <value>
            The entity types.
            </value>
        </member>
        <member name="P:Simple.OData.Client.ISchema.ComplexTypes">
            <summary>
            Gets the schema complex types.
            </summary>
            <value>
            The complex types.
            </value>
        </member>
        <member name="T:Simple.OData.Client.UnresolvableObjectException">
            <summary>
            The exception that is thrown when service metadata doesn't contain the requested metadata object
            </summary>
        </member>
        <member name="M:Simple.OData.Client.UnresolvableObjectException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.UnresolvableObjectException"/> class.
            </summary>
        </member>
        <member name="M:Simple.OData.Client.UnresolvableObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.UnresolvableObjectException"/> class.
            </summary>
            <param name="objectName">Name of the metadata object.</param>
        </member>
        <member name="M:Simple.OData.Client.UnresolvableObjectException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.UnresolvableObjectException"/> class.
            </summary>
            <param name="objectName">Name of the metadata object.</param>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Simple.OData.Client.UnresolvableObjectException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Simple.OData.Client.UnresolvableObjectException"/> class.
            </summary>
            <param name="objectName">Name of the object.</param>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="P:Simple.OData.Client.UnresolvableObjectException.ObjectName">
            <summary>
            Gets the name of the unresolved metadata object.
            </summary>
            <value>
            The name of the object.
            </value>
        </member>
    </members>
</doc>
